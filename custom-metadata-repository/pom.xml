<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<artifactId>teiid-quickstart-parent</artifactId>
		<groupId>org.jboss.teiid.quickstart</groupId>
		<version>1.1.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>custom-metadata-repository</artifactId>
	<packaging>pom</packaging>

	<name>Custom Stats Metadata Quickstart</name>
	<description>This provides an example of how to provide a custom metadata repository that provides external costing information to the Teiid engine when performing query planning.</description>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import. -->
		<jboss.bom.version>1.0.6.Final</jboss.bom.version>
		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 1.0.1.Final-redhat-1 which is a release certified to 
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven 
			repository. -->
		<!--jboss.bom.version>1.0.1.Final-redhat-1</jboss.bom.version -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-hibernate stack (you 
				can read this as the JBoss stack of the Java EE Web Profile 6 APIs with extras 
				from the Hibernate family of projects) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-common-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-api</artifactId>
			<scope>provided</scope>
		</dependency>
      <!-- Import the EJB API, we use provided scope as the API is included 
         in JBoss AS 7 -->
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>        
      <dependency>
         <groupId>org.jboss.spec.javax.ejb</groupId>
         <artifactId>jboss-ejb-api_3.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>		
		
      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- JSR-303 (Bean Validation) Implementation -->
      <!-- Provides portable constraints such as @Email -->
      <!-- Hibernate Validator is shipped in JBoss AS 7 -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator</artifactId>
         <scope>provided</scope>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      
      <!--Import dependencies to hibernate packages(eg. hibernate-core) depending on features you want to use like Hibernate Session used in the 	quickstart-->
      <!--please note that scope is provided as these jars are shipped with as7-->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <scope>provided</scope>
      </dependency>
	</dependencies>
    
    <profiles>
        <profile>
            <id>build</id>
            <modules>
                <module>stats_custom_repository</module>    
                <module>stats_mgmt_web_app</module>  
            </modules>
        </profile>
    
        <profile>
            <id>setupdatasource</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant</artifactId>
								<version>${version.ant}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>deployfiles</id>
								<phase>install</phase>
								<configuration>
									<target>
										<echo message="Installing to ${JBOSS_HOME}" />

										<available file="${JBOSS_HOME}" type="dir"
											property="jboss.present" />

										<fail unless="jboss.present"
											message="===== JBOSS_HOME variable must be set and the directory must exist ======" />
									
									
										<echo message="Copying files" />
										<!--copy todir="${JBOSS_HOME}/teiidfiles">
											<fileset dir="${basedir}/src/teiidfiles/" />
										</copy-->
                                        
                                        <copy todir="${JBOSS_HOME}/teiidfiles">
											<fileset dir="${basedir}/src/teiidfiles/" />
										</copy>
										
										<echo message="Copied files to ${JBOSS_HOME}/teiidfiles" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>													
                    <plugin>
                        <groupId>org.jboss.as.plugins</groupId>
                        <artifactId>jboss-as-maven-plugin</artifactId>
                        <version>${version.jboss.as.plugin}</version>

                        <configuration>
                            <address>subsystem=datasources,data-source=schemastats-ds</address>
                            <resource>
                                <enableResource>true</enableResource>
                                <properties>
                                    <connection-url>jdbc:h2:mem:schemastats;INIT=RUNSCRIPT FROM '${JBOSS_HOME}/teiidfiles/teiid_table_stats.sql'\;</connection-url>
                                    <jndi-name>java:/jboss/datasources/schemastats-ds</jndi-name>
                                    <use-java-context>true</use-java-context>
                                    <enabled>true</enabled>
                                    <pool-name>schemastats-ds</pool-name>
                                    <user-name>sa</user-name>
                                    <password>sa</password>
                                    <driver-name>h2</driver-name>
                                    <use-ccm>false</use-ccm>
                                </properties>
                            </resource>
                        </configuration>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                    </plugin>
    
                </plugins>
            </build>
        </profile>
        
		<profile>
			<id>deploycustomrepo</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant</artifactId>
								<version>${version.ant}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>deployfiles</id>
								<phase>install</phase>
								<configuration>
									<target>
										<echo message="Installing Custom Costing Report module to ${JBOSS_HOME}" />

										<available file="${JBOSS_HOME}" type="dir"
											property="jboss.present" />

										<fail unless="jboss.present"
											message="===== JBOSS_HOME variable must be set and the directory must exist ======" />
									
									
										<echo message="Copying vdb and dependent files" />
										<!--copy todir="${JBOSS_HOME}/teiidfiles">
											<fileset dir="${basedir}/src/teiidfiles/" />
										</copy-->
										<copy todir="${JBOSS_HOME}/standalone/deployments">
											<fileset dir="${basedir}/src/vdb/" />
										</copy>
                                        
                                        <delete>
   											 <fileset dir="${JBOSS_HOME}/modules/system/layers/base/org/jboss/teiid/costing/example/" />
  										</delete>
                                        
                                        <unzip src="${basedir}/stats_custom_repository/target/stats-custom-repository-module-dist.zip" dest="${JBOSS_HOME}/modules/system/layers/base"/>
                                            
                                        <echo message="Deployed vdb to ${JBOSS_HOME}" />
                                        
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>								
				</plugins>
			</build>
		</profile>
        
        <profile>
            <id>deploywar</id>
            <modules>   
                <module>stats_mgmt_web_app</module>  
            </modules>
        </profile>
    </profiles>

 
  </project>
