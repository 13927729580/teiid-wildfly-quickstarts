<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<vdb name="StocksMat" version="1">

    <description>Shows how to call an Infinispan local cache</description>
    
    <property name="UseConnectorMetadata" value="cached" />
    
    <model name="Accounts">
        <!-- 
          JDBC Import settings 
          
          importer.useFullSchemaName directs the importer to drop the source 
          schema from the Teiid object name, so that the Teiid fully qualified name
          will be in the form of <model name>.<table name>
        -->
        <property name="importer.useFullSchemaName" value="false"/>
           
         <!--
            This connector is defined to reference the H2 localDS" 
          -->
        <source name="h2-connector" translator-name="translator-h2" connection-jndi-name="java:/accounts-ds"/>
    </model>    
 
     <model name="MarketData">
        <!-- 
            Each source represents a translator and data source. There are 
            pre-defined translators, or you can create one.
        -->
        <source name="text-connector" translator-name="file" connection-jndi-name="java:/marketdata-file"/>
    </model>
 
    <model name="Stocks" type="VIRTUAL">
        <metadata type="DDL"><![CDATA[
                
        CREATE VIEW StockPrices (
            symbol string,
            price bigdecimal
            )
            AS  
               SELECT SP.symbol, SP.price
                FROM (EXEC MarketData.getTextFiles('*.txt')) AS f, 
                    TEXTTABLE(f.file COLUMNS symbol string, price bigdecimal HEADER) AS SP;
        

                 
        ]]> </metadata>
    </model>       
    
    <model name="StockMatCache" type="Physical">
        <property name="importer.useFullSchemaName" value="false"/>
           
       <source name="StockMatSource1" translator-name="infinispan1" connection-jndi-name="java:/infinispanLocalMat" />  

    </model>            
    
	<model name="StocksMatModel" type="VIRTUAL">
		<metadata type="DDL"><![CDATA[
	CREATE view stockPricesMatView
		(
            productId integer,
            symbol string,
            price bigdecimal,
            companyName   varchar(256)
            
 		) OPTIONS (MATERIALIZED 'TRUE', UPDATABLE 'TRUE',         
               MATERIALIZED_TABLE 'StockMatCache.Stock', 
               "teiid_rel:MATVIEW_TTL" 60000,
               "teiid_rel:MATVIEW_BEFORE_LOAD_SCRIPT" 'execute StockMatCache.native(''truncate cache'');',
   		       "teiid_rel:MATVIEW_LOAD_SCRIPT" 'insert into StockMatCache.Stock (productId, symbol, price, companyName) SELECT  A.ID, S.symbol, S.price, A.COMPANY_NAME FROM Stocks.StockPrices AS S, Accounts.PRODUCT AS A WHERE S.symbol = A.SYMBOL',
               "teiid_rel:MATVIEW_AFTER_LOAD_SCRIPT"  'execute StockMatCache.native(''swap cache names'');', 
               "teiid_rel:MATVIEW_SHARE_SCOPE" 'NONE',
               "teiid_rel:ALLOW_MATVIEW_MANAGEMENT" 'true', 
               "teiid_rel:MATVIEW_STATUS_TABLE" 'Accounts.status',                
               "teiid_rel:MATVIEW_ONERROR_ACTION" 'THROW_EXCEPTION')
 		AS SELECT  A.ID, S.symbol, S.price, A.COMPANY_NAME
                    FROM Stocks.StockPrices AS S, Accounts.PRODUCT AS A
                    WHERE S.symbol = A.SYMBOL;
    	]]>
   		</metadata>
	</model>             
  
    <translator name="infinispan1" type="infinispan-cache">

        <property name="SupportsDSLSearching" value="true"/>
       <property name="SupportsDirectQueryProcedure" value="true"/>
       <property name="SupportsNativeQueries" value="true"/>

<!-- other translator overrides -->
<!--        
        <property name="SupportsNotCriteria" value="true"/>
        <property name="SupportsCompareCriteriaOrdered" value="true"/>
        <property name="SupportsIsNullCriteria" value="true"/>
-->

    </translator>
        
    <translator name="translator-h2" type="h2">
        <property name="SupportsNativeQueries" value="true"/>
    </translator>
</vdb>